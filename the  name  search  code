import 'package:flutte_ex_searchbar/home.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const Home(),
    );
  }
}

// home .dart in the file name














import 'package:flutte_ex_searchbar/search.dart';
import 'package:flutter/material.dart';

class Home extends StatefulWidget {
  const Home({super.key});

  @override
  State<Home> createState() => _HomeState();
}

class _HomeState extends State<Home> {
  List<String> names = [
    'Cat',
    'Dog',
    'Monkey',
    'Donkey',
    'Fish',
    'Goat',
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Search Example'),
        actions: [
          IconButton(
              onPressed: () {
                showSearch(context: context, delegate: Search());
              },
              icon: const Icon(Icons.search))
        ],
      ),
      body: ListView.builder(
        itemCount: names.length,
        itemBuilder: (context, index) {
          return Card(
            child: ListTile(
              title: Text(
                names[index],
              ),
            ),
          );
        },
      ),
    );
  }
}




the search.dart in the file name






import 'package:flutter/material.dart';

class Search extends SearchDelegate {
  List<String> names = [
    'Cat',
    'Dog',
    'Monkey',
    'Donkey',
    'Fish',
    'Goat',
  ];

  List<String> suggestions = [];

  List<String> results = [];
  @override
  List<Widget>? buildActions(BuildContext context) {
    return <Widget>[
      IconButton(
        icon: const Icon(Icons.close),
        onPressed: () {
          query = '';
        },
      )
    ];
  }

  @override
  Widget? buildLeading(BuildContext context) {
    return IconButton(
      icon: const Icon(Icons.arrow_back),
      onPressed: () {
        Navigator.of(context).pop();
      },
    );
  }

  @override
  Widget buildResults(BuildContext context) {
    results.clear();
    if (query.isNotEmpty) {
      for (var e in names) {
        if (e.toLowerCase().contains(query.toLowerCase())) {
          results.add(e);
        }
      }

      if (results.isEmpty) {
        return Card(
          child: ListTile(
            title: Text(
              'No Results',
            ),
          ),
        );
      }

      return ListView.builder(
          itemCount: results.length,
          itemBuilder: (context, index) {
            return Card(
              child: ListTile(
                title: Text(
                  results[index],
                ),
              ),
            );
          });
    } else {
      return const Text('No Results');
    }
  }

  @override
  Widget buildSuggestions(BuildContext context) {
    suggestions.clear();
    if (query.isNotEmpty) {
      for (var e in names) {
        if (e.toLowerCase().contains(query.toLowerCase())) {
          suggestions.add(e);
        }
      }

      if (suggestions.isEmpty) {
        return Card(
          child: ListTile(
            title: Text(
              'No Results',
            ),
          ),
        );
      }

      return ListView.builder(
          itemCount: suggestions.length,
          itemBuilder: (context, index) {
            return Card(
              child: ListTile(
                title: Text(
                  suggestions[index],
                ),
              ),
            );
          });
    } else {
      return const Text('No Results');
    }
  }
}
